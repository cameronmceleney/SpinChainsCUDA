"C:\Program Files\JetBrains\CLion 2021.3\bin\cmake\win\x64\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Release "-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2021.3/bin/ninja/win/x64/ninja.exe" -G Ninja -S "C:\Users\Cameron McEleney\CLionProjects\SpinChainsCUDA" -B "C:\Users\Cameron McEleney\CLionProjects\SpinChainsCUDA\cmake-build-release"
-- The CXX compiler identification is GNU 11.2.0
-- The CUDA compiler identification is NVIDIA 12.1.105
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files/JetBrains/CLion 2021.3/bin/mingw/bin/g++.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - failed
-- Check for working CUDA compiler: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/bin/nvcc.exe
-- Check for working CUDA compiler: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/bin/nvcc.exe - broken
CMake Error at C:/Program Files/JetBrains/CLion 2021.3/bin/cmake/win/x64/share/cmake-3.25/Modules/CMakeTestCUDACompiler.cmake:103 (message):
  The CUDA compiler

    "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/bin/nvcc.exe"

  is not able to compile a simple test program.

  It fails with the following output:

    Change Dir: C:/Users/Cameron McEleney/CLionProjects/SpinChainsCUDA/cmake-build-release/CMakeFiles/CMakeScratch/TryCompile-u7c83i
    
    Run Build Command(s):C:/Program Files/JetBrains/CLion 2021.3/bin/ninja/win/x64/ninja.exe cmTC_d247c && [1/2] Building CUDA object CMakeFiles\cmTC_d247c.dir\main.cu.obj
    main.cu
    tmpxft_0000665c_00000000-10_main.cudafe1.cpp
    [2/2] Linking CUDA executable cmTC_d247c.exe
    FAILED: cmTC_d247c.exe 
    cmd.exe /C "cd . && "C:\Program Files\JetBrains\CLion 2021.3\bin\cmake\win\x64\bin\cmake.exe" -E vs_link_exe --intdir=CMakeFiles\cmTC_d247c.dir --rc=C:\PROGRA~1\JETBRA~1\CLION2~1.3\bin\mingw\bin\windres.exe --mt="" --manifests  -- C:\PROGRA~1\JETBRA~1\CLION2~1.3\bin\mingw\bin\ld.exe /nologo CMakeFiles\cmTC_d247c.dir\main.cu.obj  /out:cmTC_d247c.exe /implib:cmTC_d247c.lib /pdb:cmTC_d247c.pdb /version:0.0 /debug /INCREMENTAL  cudadevrt.lib  cudart_static.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib -LIBPATH:"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/lib/x64"  && cd ."
    RC Pass 1: command "C:\PROGRA~1\JETBRA~1\CLION2~1.3\bin\mingw\bin\windres.exe /fo CMakeFiles\cmTC_d247c.dir/manifest.res CMakeFiles\cmTC_d247c.dir/manifest.rc" failed (exit code 1) with the following output:
    Usage: C:\PROGRA~1\JETBRA~1\CLION2~1.3\bin\mingw\bin\windres.exe [option(s)] [input-file] [output-file]
     The options are:
      -i --input=<file>            Name input file
      -o --output=<file>           Name output file
      -J --input-format=<format>   Specify input format
      -O --output-format=<format>  Specify output format
      -F --target=<target>         Specify COFF target
         --preprocessor=<program>  Program to use to preprocess rc file
         --preprocessor-arg=<arg>  Additional preprocessor argument
      -I --include-dir=<dir>       Include directory when preprocessing rc file
      -D --define <sym>[=<val>]    Define SYM when preprocessing rc file
      -U --undefine <sym>          Undefine SYM when preprocessing rc file
      -v --verbose                 Verbose - tells you what it's doing
      -c --codepage=<codepage>     Specify default codepage
      -l --language=<val>          Set language when reading rc file
         --use-temp-file           Use a temporary file instead of popen to read
                                   the preprocessor output
         --no-use-temp-file        Use popen (default)
      -r                           Ignored for compatibility with rc
      @<file>                      Read options from <file>
      -h --help                    Print this help message
      -V --version                 Print version information
    FORMAT is one of rc, res, or coff, and is deduced from the file name
    extension if not specified.  A single file name is an input file.
    No input-file is stdin, default rc.  No output-file is stdout, default rc.
    C:\PROGRA~1\JETBRA~1\CLION2~1.3\bin\mingw\bin\windres.exe: supported targets: pe-x86-64 pei-x86-64 pe-bigobj-x86-64 elf64-x86-64 elf64-l1om elf64-k1om pe-i386 pei-i386 elf32-i386 elf32-iamcu elf64-little elf64-big elf32-little elf32-big srec symbolsrec verilog tekhex binary ihex plugin
    ninja: build stopped: subcommand failed.
    
    

  

  CMake will not be able to correctly generate this project.
Call Stack (most recent call first):
  CMakeLists.txt:2 (project)


-- Configuring incomplete, errors occurred!
See also "C:/Users/Cameron McEleney/CLionProjects/SpinChainsCUDA/cmake-build-release/CMakeFiles/CMakeOutput.log".
See also "C:/Users/Cameron McEleney/CLionProjects/SpinChainsCUDA/cmake-build-release/CMakeFiles/CMakeError.log".

Cannot get compiler information:
	Compiler exited with error code 2: "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\bin\Hostx64\x64\cl.exe" @C:\Users\CAMERO~1\AppData\Local\Temp\response-file9639030080737710083 C:\Users\CAMERO~1\AppData\Local\Temp\compiler-file458493010067221222 | @response-file9639030080737710083=/TP /std:c++20 -D__CUDA_ARCH_LIST__=520 -nologo -E -TP -EHsc -D__CUDACC__ -D__NVCC__ /EHsc -O2 -Ob2 -MD "-IC:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\bin/../include" -D _WINDOWS -D NDEBUG -D__CUDACC_VER_MAJOR__=12 -D__CUDACC_VER_MINOR__=1 -D__CUDACC_VER_BUILD__=105 -D__CUDA_API_VER_MAJOR__=12 -D__CUDA_API_VER_MINOR__=1 -D__NVCC_DIAG_PRAGMA_SUPPORT__=1 -FI cuda_runtime.h /Be /Bd /EP /w /wd4067
	all:
		@cd C:\Users\Cameron McEleney\CLionProjects\SpinChainsCUDA\cmake-build-release
		@set INCLUDE=
		@set LIB=
		@set LIBPATH=
		@set CL=
		@set _CL_=
		@set LINK=
		C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\bin\Hostx64\x64\cl.exe @<< C:\Users\CAMERO~1\AppData\Local\Temp\compiler-file458493010067221222
	/TP /std:c++20 -D__CUDA_ARCH_LIST__=520 -nologo -E -TP -EHsc -D__CUDACC__ -D__NVCC__ /EHsc -O2 -Ob2 -MD "-IC:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\bin/../include" -D _WINDOWS -D NDEBUG -D__CUDACC_VER_MAJOR__=12 -D__CUDACC_VER_MINOR__=1 -D__CUDACC_VER_BUILD__=105 -D__CUDA_API_VER_MAJOR__=12 -D__CUDA_API_VER_MINOR__=1 -D__NVCC_DIAG_PRAGMA_SUPPORT__=1 -FI cuda_runtime.h /Be /Bd /EP /w /wd4067<<
	
	compiler-file458493010067221222
	`C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\bin\Hostx64\x64\c1xx.dll -zm0x00007FF636440DF0 -il C:\Users\CAMERO~1\AppData\Local\Temp\_CL_c84ec77c -typedil -f C:\Users\CAMERO~1\AppData\Local\Temp\compiler-file458493010067221222 -Ze -D_MSC_EXTENSIONS -Zp16 -Focompiler-file458493010067221222.obj -Fe compiler-file458493010067221222.exe -pc \:/ -Fdvc140.pdb -D_MSC_VER=1936 -D_MSC_FULL_VER=193632532 -D_MSC_BUILD=0 -D_M_AMD64=100 -ZILP448 -D_M_X64=100 -D_WIN64 -D_WIN32 -GS -GR -D_CPPRTTI -Zc:forScope -Zc:wchar_t -std:c++20 -D__CUDA_ARCH_LIST__=520 -nologo -D__CUDACC__ -D__NVCC__ -EHs -D_CPPUNWIND -EHc -GF -Og -Oi -Ot -Oy -MD -D_MT -D_DLL -I C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\bin/../include -D_WINDOWS -DNDEBUG -D__CUDACC_VER_MAJOR__=12 -D__CUDACC_VER_MINOR__=1 -D__CUDACC_VER_BUILD__=105 -D__CUDA_API_VER_MAJOR__=12 -D__CUDA_API_VER_MINOR__=1 -D__NVCC_DIAG_PRAGMA_SUPPORT__=1 -FI cuda_runtime.h -Bd -E -EP -W 0 -wd 4067'
	C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\include\crt/host_config.h(231): fatal error C1083: Cannot open include file: 'crtdefs.h': No such file or directory
	
	
